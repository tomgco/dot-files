# color
set -g default-terminal "screen-256color"
set -g terminal-overrides 'xterm:colors=256'

# status bar
setw -g clock-mode-style 24
set-option -g status-utf8 on
set -g status-interval 1
##set -g status-justify centre # center align window list
set -g status-left-length 20
set -g status-right-length 140
set -g status-right '#[fg=white,bg=black,dim] #(~/.bin/system-stats 1 5)#[fg=green,bg=black,bright] #[fg=red,dim]up #(uptime | cut -d" " -f4-) #[fg=white]%a %k:%M:%S'

# Fix crazy shit in OSX with nohup and pbcopy & pbpaste
# set-option -g default-command "reattach-to-user-namespace -l zsh"

# status bar colors
set -g status-fg colour18 # black
set -g status-bg colour02 # green
set -g status-attr dim

#set -g renumber-windows on
set -g window-style 'fg=colour247,bg=colour236'
set -g window-active-style 'fg=white,bg=black'

# default window title colors
set-window-option -g window-status-fg colour18
#set-window-option -g window-status-bg default
#set-window-option -g window-status-attr dim

# active window title colors
#set-window-option -g window-status-current-fg white
#set-window-option -g window-status-current-bg default
#set-window-option -g window-status-current-attr bright

# C-b is not acceptable -- Vim uses it
set-option -g prefix C-a
bind-key C-a last-window

# Start numbering at 1
set -g base-index 1

# Allows for faster key repetition
set -s escape-time 0

# Rather than constraining window size to the maximum size of any client
# connected to the *session*, constrain window size to the maximum size of any
# client connected to *that window*. Much more reasonable.
setw -g aggressive-resize on

# Allows us to use C-a a <command> to send commands to a TMUX session inside
# another TMUX session
bind-key a send-prefix

# Activity monitoring
setw -g monitor-activity on
set -g visual-activity on

# Highlight active window
set-window-option -g window-status-current-bg red

# Vi copypaste mode
set-window-option -g mode-keys vi
bind-key -t vi-copy 'v' begin-selection
bind-key -t vi-copy 'y' copy-selection

# hjkl pane traversal
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

bind ` setw synchronize-panes
#bind ` if 'test "$(uname)" = "Darwin"' 'set status-bg red'

# reload config
bind r source-file ~/.tmux.conf \; display-message "Config reloaded..."

# Use mac copying
#set-option -g default-command "reattach-to-user-namespace -l zsh"

# auto window rename
set-window-option -g automatic-rename

# rm mouse mode fail setw -g mode-mouse on set-option -g mouse-select-pane on

unbind-key c
unbind-key '%'
unbind-key '"'

bind c neww -c '#{pane_current_path}'
bind '"' splitw -v -c '#{pane_current_path}'
bind '%' splitw -h -c '#{pane_current_path}'

# Custom Splits
bind-key + splitw -v -p 10 -c '#{pane_current_path}'
